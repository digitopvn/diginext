name: Docker Build & Push Workflow

# TRIGGERS
on:
  workflow_run:
    workflows: ["Release Workflow"]
    branches: 
      - main
      - prerelease
      - beta
    types:
      - completed

# ENVIRONMENT VARIABLES
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

# CI/CD STEPS
jobs:
  docker-base:
    name: Build Diginext Docker Base Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.CI_GITHUB_TOKEN }}

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker image
        run: docker build -f Dockerfile.base -t digitop/diginext-base .

      - name: Push image to Docker Hub
        run: docker push digitop/diginext-base
        if: contains(github.ref, 'beta') || contains(github.ref, 'prerelease')

  docker-release:
    name: Release Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.CI_GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "lts/*"

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: 8
          run_install: false
      
      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install package dependencies
      #   run: npm ci
        run: pnpm install --no-frozen-lockfile

      - name: Build source code
        run: pnpm build

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        id: buildx
  
      - name: Build & push to Docker Hub (main)
        run: pnpm docker-build
        if: contains(github.ref, 'main') || contains(github.ref, 'release')

      - name: Build & push to Docker Hub (beta)
        run: pnpm docker-build-beta
        if: contains(github.ref, 'beta') || contains(github.ref, 'prerelease')
      

