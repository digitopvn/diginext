{
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"ResponseData": {
				"properties": {
					"status": {
						"type": "number",
						"enum": [0, 1],
						"description": "1 = succeed | 0 = failed"
					},
					"data": {},
					"messages": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"description": "Error/warning messages"
					}
				},
				"required": ["status", "data", "messages"],
				"type": "object",
				"additionalProperties": false
			},
			"ObjectID": {
				"description": "Create a new ObjectID instance.",
				"properties": {
					"generationTime": {
						"type": "number",
						"format": "double",
						"description": "The generation time of this ObjectId instance."
					}
				},
				"required": ["generationTime"],
				"type": "object",
				"additionalProperties": false
			},
			"DeployEnvironment": {
				"properties": {
					"registry": {
						"type": "string",
						"description": "Container registry slug"
					},
					"provider": {
						"type": "string",
						"description": "Cloud provider's short name"
					},
					"cluster": {
						"type": "string",
						"description": "Cluster's short name"
					},
					"project": {
						"type": "string",
						"description": "[Google Cloud] PROJECT_ID"
					},
					"region": {
						"type": "string",
						"description": "[Google Cloud] Region"
					},
					"zone": {
						"type": "string",
						"description": "[Google Cloud] Zone"
					},
					"imageURL": {
						"type": "string",
						"description": "Image URI of this app on the Container Registry.\n- Combined from: `<registry-image-base-url>/<project-slug>/<app-name-in-slug-case>`\n- No `tag` version at the end! (eg. `latest`, `beta`,...)"
					},
					"namespace": {
						"type": "string",
						"description": "Destination namespace name"
					},
					"size": {
						"type": "string",
						"enum": ["none", "1x", "2x", "3x", "4x", "5x", "6x", "7x", "8x", "9x", "10x"],
						"description": "Container quota resources"
					},
					"shouldInherit": {
						"type": "boolean"
					},
					"redirect": {
						"type": "boolean"
					},
					"replicas": {
						"type": "number",
						"format": "double",
						"description": "Container's scaling replicas"
					},
					"port": {
						"type": "number",
						"format": "double",
						"description": "Container's port"
					},
					"basePath": {
						"type": "string"
					},
					"domains": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"cdn": {
						"type": "boolean"
					},
					"ssl": {
						"type": "string",
						"enum": ["letsencrypt", "custom", "none"]
					},
					"tlsSecret": {
						"type": "string"
					},
					"cliVersion": {
						"type": "string"
					},
					"deploymentYaml": {
						"type": "string",
						"description": "Content of deployment YAML file"
					},
					"prereleaseDeploymentYaml": {
						"type": "string",
						"description": "Content of prerelease deployment YAML file"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"ProviderInfo": {
				"properties": {
					"name": {
						"type": "string"
					},
					"user_id": {
						"type": "string"
					},
					"access_token": {
						"type": "string"
					}
				},
				"required": ["name"],
				"type": "object",
				"additionalProperties": false
			},
			"IRouteScope": {
				"type": "string",
				"enum": ["all", "workspace", "team", "app", "own"]
			},
			"IRoutePermission": {
				"type": "string",
				"enum": ["full", "create", "read", "update", "delete"]
			},
			"RoleRoute": {
				"properties": {
					"route": {
						"type": "string"
					},
					"scope": {
						"$ref": "#/components/schemas/IRouteScope"
					},
					"permissions": {
						"items": {
							"$ref": "#/components/schemas/IRoutePermission"
						},
						"type": "array"
					}
				},
				"required": ["route", "scope", "permissions"],
				"type": "object",
				"additionalProperties": false
			},
			"User": {
				"properties": {
					"_id": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/ObjectID"
							},
							{
								"type": "string"
							}
						]
					},
					"slug": {
						"type": "string",
						"description": "Auto-generated by \"name\" column"
					},
					"active": {
						"type": "boolean",
						"description": "Auto-generated by \"name\" column"
					},
					"metadata": {
						"description": "Auto-generated by entity's columns\nEntity's metadata without unicode characters"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"deletedAt": {
						"type": "string",
						"format": "date-time"
					},
					"updatedAt": {
						"type": "string",
						"format": "date-time"
					},
					"name": {
						"type": "string",
						"description": "User name"
					},
					"username": {
						"type": "string",
						"description": "Unique username of a user\nThis equavilent with \"slug\""
					},
					"email": {
						"type": "string",
						"description": "User email address"
					},
					"verified": {
						"type": "boolean",
						"description": "Is this user's email or phone verified?"
					},
					"image": {
						"type": "string",
						"description": "User profile picture URL"
					},
					"providers": {
						"items": {
							"$ref": "#/components/schemas/ProviderInfo"
						},
						"type": "array",
						"description": "List of Cloud Providers which this user can access to"
					},
					"password": {
						"type": "string",
						"description": "User password (hashed)"
					},
					"token": {
						"description": "User token"
					},
					"roles": {
						"anyOf": [
							{
								"items": {
									"$ref": "#/components/schemas/ObjectID"
								},
								"type": "array"
							},
							{
								"items": {
									"$ref": "#/components/schemas/Role"
								},
								"type": "array"
							},
							{
								"items": {
									"type": "string"
								},
								"type": "array"
							}
						],
						"description": "User's roles\nTODO: Thêm \"workspace\" cho \"roles\" vì mỗi workspace sẽ có roles khác nhau, trong khi mỗi user có thể nằm trong nhiều workspace"
					},
					"teams": {
						"anyOf": [
							{
								"items": {
									"$ref": "#/components/schemas/ObjectID"
								},
								"type": "array"
							},
							{
								"items": {
									"$ref": "#/components/schemas/Team"
								},
								"type": "array"
							},
							{
								"items": {
									"type": "string"
								},
								"type": "array"
							}
						],
						"description": "User's team IDs which this user is a member"
					},
					"workspaces": {
						"anyOf": [
							{
								"items": {
									"$ref": "#/components/schemas/ObjectID"
								},
								"type": "array"
							},
							{
								"items": {
									"$ref": "#/components/schemas/Workspace"
								},
								"type": "array"
							},
							{
								"items": {
									"type": "string"
								},
								"type": "array"
							}
						],
						"description": "List of workspace IDs which this user is a member"
					},
					"activeWorkspace": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/ObjectID"
							},
							{
								"$ref": "#/components/schemas/Workspace"
							},
							{
								"type": "string"
							}
						],
						"description": "Active workspace of a user"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"App": {
				"properties": {
					"_id": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/ObjectID"
							},
							{
								"type": "string"
							}
						]
					},
					"slug": {
						"type": "string",
						"description": "Auto-generated by \"name\" column"
					},
					"active": {
						"type": "boolean",
						"description": "Auto-generated by \"name\" column"
					},
					"metadata": {
						"description": "Auto-generated by entity's columns\nEntity's metadata without unicode characters"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"deletedAt": {
						"type": "string",
						"format": "date-time"
					},
					"updatedAt": {
						"type": "string",
						"format": "date-time"
					},
					"name": {
						"type": "string"
					},
					"image": {
						"type": "string"
					},
					"createdBy": {
						"type": "string"
					},
					"lastUpdatedBy": {
						"type": "string"
					},
					"git": {
						"properties": {
							"repoSSH": {
								"type": "string"
							},
							"repoURL": {
								"type": "string"
							},
							"provider": {
								"type": "string"
							}
						},
						"type": "object"
					},
					"framework": {
						"properties": {
							"repoSSH": {
								"type": "string"
							},
							"repoURL": {
								"type": "string"
							},
							"slug": {
								"type": "string"
							},
							"name": {
								"type": "string"
							}
						},
						"type": "object"
					},
					"environment": {
						"properties": {},
						"additionalProperties": {
							"anyOf": [
								{
									"$ref": "#/components/schemas/DeployEnvironment"
								},
								{
									"type": "string"
								}
							]
						},
						"type": "object"
					},
					"latestBuild": {
						"type": "string"
					},
					"projectSlug": {
						"type": "string"
					},
					"owner": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/ObjectID"
							},
							{
								"$ref": "#/components/schemas/User"
							},
							{
								"type": "string"
							}
						],
						"description": "Owner ID of the app"
					},
					"project": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/ObjectID"
							},
							{
								"$ref": "#/components/schemas/Project"
							},
							{
								"type": "string"
							}
						],
						"description": "Project ID of the app"
					},
					"workspace": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/ObjectID"
							},
							{
								"$ref": "#/components/schemas/Workspace"
							},
							{
								"type": "string"
							}
						],
						"description": "Workspace ID of the app"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"Workspace": {
				"properties": {
					"_id": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/ObjectID"
							},
							{
								"type": "string"
							}
						]
					},
					"slug": {
						"type": "string",
						"description": "Workspace slug: auto-generated by \"name\" column"
					},
					"active": {
						"type": "boolean",
						"description": "Auto-generated by \"name\" column"
					},
					"metadata": {
						"description": "Auto-generated by entity's columns\nEntity's metadata without unicode characters"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"deletedAt": {
						"type": "string",
						"format": "date-time"
					},
					"updatedAt": {
						"type": "string",
						"format": "date-time"
					},
					"name": {
						"type": "string",
						"description": "Workspace name"
					},
					"public": {
						"type": "boolean",
						"description": "Is this a `public` workspace that anyone can join, otherwise it's a `private` workspace that needs approval on joining request."
					},
					"image": {
						"type": "string",
						"description": "Workspace profile picture"
					},
					"domain": {
						"type": "string",
						"description": "Workspace domain name"
					},
					"owner": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/ObjectID"
							},
							{
								"$ref": "#/components/schemas/User"
							},
							{
								"type": "string"
							}
						],
						"description": "User ID of the owner"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"Project": {
				"description": "Projects",
				"properties": {
					"_id": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/ObjectID"
							},
							{
								"type": "string"
							}
						]
					},
					"slug": {
						"type": "string",
						"description": "Auto-generated by \"name\" column"
					},
					"active": {
						"type": "boolean",
						"description": "Auto-generated by \"name\" column"
					},
					"metadata": {
						"description": "Auto-generated by entity's columns\nEntity's metadata without unicode characters"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"deletedAt": {
						"type": "string",
						"format": "date-time"
					},
					"updatedAt": {
						"type": "string",
						"format": "date-time"
					},
					"name": {
						"type": "string"
					},
					"image": {
						"type": "string"
					},
					"apiKey": {
						"type": "string"
					},
					"clientId": {
						"type": "string"
					},
					"clientSecret": {
						"type": "string"
					},
					"createdBy": {
						"type": "string"
					},
					"lastUpdatedBy": {
						"type": "string"
					},
					"latestBuild": {
						"type": "string"
					},
					"appSlugs": {
						"type": "string"
					},
					"apps": {
						"anyOf": [
							{
								"items": {
									"$ref": "#/components/schemas/ObjectID"
								},
								"type": "array"
							},
							{
								"items": {
									"$ref": "#/components/schemas/App"
								},
								"type": "array"
							},
							{
								"items": {
									"type": "string"
								},
								"type": "array"
							}
						],
						"description": "List of App IDs"
					},
					"owner": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/ObjectID"
							},
							{
								"$ref": "#/components/schemas/User"
							},
							{
								"type": "string"
							}
						],
						"description": "User ID of the owner"
					},
					"workspace": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/ObjectID"
							},
							{
								"$ref": "#/components/schemas/Workspace"
							},
							{
								"type": "string"
							}
						],
						"description": "ID of the workspace"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"Role": {
				"properties": {
					"_id": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/ObjectID"
							},
							{
								"type": "string"
							}
						]
					},
					"slug": {
						"type": "string",
						"description": "Auto-generated by \"name\" column"
					},
					"active": {
						"type": "boolean",
						"description": "Auto-generated by \"name\" column"
					},
					"metadata": {
						"description": "Auto-generated by entity's columns\nEntity's metadata without unicode characters"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"deletedAt": {
						"type": "string",
						"format": "date-time"
					},
					"updatedAt": {
						"type": "string",
						"format": "date-time"
					},
					"name": {
						"type": "string"
					},
					"routes": {
						"items": {
							"$ref": "#/components/schemas/RoleRoute"
						},
						"type": "array"
					},
					"owner": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/ObjectID"
							},
							{
								"$ref": "#/components/schemas/User"
							},
							{
								"type": "string"
							}
						],
						"description": "User ID of the owner"
					},
					"project": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/ObjectID"
							},
							{
								"$ref": "#/components/schemas/Project"
							},
							{
								"type": "string"
							}
						],
						"description": "ID of the project"
					},
					"workspace": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/ObjectID"
							},
							{
								"$ref": "#/components/schemas/Workspace"
							},
							{
								"type": "string"
							}
						],
						"description": "ID of the workspace"
					}
				},
				"required": ["name", "routes"],
				"type": "object",
				"additionalProperties": false
			},
			"Team": {
				"properties": {
					"_id": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/ObjectID"
							},
							{
								"type": "string"
							}
						]
					},
					"slug": {
						"type": "string",
						"description": "Auto-generated by \"name\" column"
					},
					"active": {
						"type": "boolean",
						"description": "Auto-generated by \"name\" column"
					},
					"metadata": {
						"description": "Auto-generated by entity's columns\nEntity's metadata without unicode characters"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"deletedAt": {
						"type": "string",
						"format": "date-time"
					},
					"updatedAt": {
						"type": "string",
						"format": "date-time"
					},
					"name": {
						"type": "string"
					},
					"image": {
						"type": "string"
					},
					"owner": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/ObjectID"
							},
							{
								"$ref": "#/components/schemas/User"
							},
							{
								"type": "string"
							}
						],
						"description": "User ID of the owner"
					},
					"project": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/ObjectID"
							},
							{
								"$ref": "#/components/schemas/Project"
							},
							{
								"type": "string"
							}
						],
						"description": "ID of the project"
					},
					"workspace": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/ObjectID"
							},
							{
								"$ref": "#/components/schemas/Workspace"
							},
							{
								"type": "string"
							}
						],
						"description": "ID of the workspace"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"Build": {
				"properties": {
					"_id": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/ObjectID"
							},
							{
								"type": "string"
							}
						]
					},
					"slug": {
						"type": "string",
						"description": "Auto-generated by \"name\" column"
					},
					"active": {
						"type": "boolean",
						"description": "Auto-generated by \"name\" column"
					},
					"metadata": {
						"description": "Auto-generated by entity's columns\nEntity's metadata without unicode characters"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"deletedAt": {
						"type": "string",
						"format": "date-time"
					},
					"updatedAt": {
						"type": "string",
						"format": "date-time"
					},
					"name": {
						"type": "string"
					},
					"image": {
						"type": "string"
					},
					"tag": {
						"type": "string"
					},
					"env": {
						"type": "string"
					},
					"branch": {
						"type": "string"
					},
					"createdBy": {
						"type": "string"
					},
					"status": {
						"type": "string",
						"enum": ["start", "building", "failed", "success"]
					},
					"projectSlug": {
						"type": "string"
					},
					"appSlug": {
						"type": "string"
					},
					"logs": {
						"type": "string"
					},
					"app": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/ObjectID"
							},
							{
								"$ref": "#/components/schemas/App"
							},
							{
								"type": "string"
							}
						],
						"description": "ID of the app"
					},
					"owner": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/ObjectID"
							},
							{
								"$ref": "#/components/schemas/User"
							},
							{
								"type": "string"
							}
						],
						"description": "User ID of the owner"
					},
					"project": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/ObjectID"
							},
							{
								"$ref": "#/components/schemas/Project"
							},
							{
								"type": "string"
							}
						],
						"description": "ID of the project"
					},
					"workspace": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/ObjectID"
							},
							{
								"$ref": "#/components/schemas/Workspace"
							},
							{
								"type": "string"
							}
						],
						"description": "ID of the workspace"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"IGetQueryParams": {
				"properties": {
					"populate": {
						"type": "string",
						"example": "owner,workspace"
					},
					"select": {
						"type": "string"
					},
					"order": {
						"type": "string",
						"example": "-updatedAt,-createdAt"
					},
					"raw": {
						"type": "boolean",
						"description": "Disable the default `{$set: body}` of \"update\" query & update `{body}` directly to the items",
						"default": "false"
					},
					"page": {
						"type": "number",
						"format": "double"
					},
					"size": {
						"type": "number",
						"format": "double"
					},
					"limit": {
						"type": "number",
						"format": "double"
					},
					"skip": {
						"type": "number",
						"format": "double"
					},
					"id": {
						"type": "string",
						"description": "Find one item by `{ObjectID}`"
					},
					"_id": {
						"type": "string"
					},
					"search": {
						"type": "boolean",
						"description": "Mark this request as search (return the similar results based on the filter query params)",
						"default": "true"
					},
					"download": {
						"type": "boolean",
						"description": "If `true`, return the excel binary file to download.",
						"default": "false"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"Pick_Build.Exclude_keyofBuild.keyofHiddenBodyKeys__": {
				"properties": {
					"app": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/ObjectID"
							},
							{
								"$ref": "#/components/schemas/App"
							},
							{
								"type": "string"
							}
						],
						"description": "ID of the app"
					},
					"name": {
						"type": "string"
					},
					"image": {
						"type": "string"
					},
					"tag": {
						"type": "string"
					},
					"slug": {
						"type": "string",
						"description": "Auto-generated by \"name\" column"
					},
					"env": {
						"type": "string"
					},
					"branch": {
						"type": "string"
					},
					"createdBy": {
						"type": "string"
					},
					"status": {
						"type": "string",
						"enum": ["start", "building", "failed", "success"]
					},
					"projectSlug": {
						"type": "string"
					},
					"appSlug": {
						"type": "string"
					},
					"logs": {
						"type": "string"
					},
					"project": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/ObjectID"
							},
							{
								"$ref": "#/components/schemas/Project"
							},
							{
								"type": "string"
							}
						],
						"description": "ID of the project"
					},
					"active": {
						"type": "boolean",
						"description": "Auto-generated by \"name\" column"
					}
				},
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"Omit_Build.keyofHiddenBodyKeys_": {
				"$ref": "#/components/schemas/Pick_Build.Exclude_keyofBuild.keyofHiddenBodyKeys__",
				"description": "Construct a type with the properties of T except for those in type K."
			},
			"IPostQueryParams": {
				"properties": {
					"populate": {
						"type": "string",
						"example": "owner,workspace"
					},
					"select": {
						"type": "string"
					},
					"order": {
						"type": "string",
						"example": "-updatedAt,-createdAt"
					},
					"raw": {
						"type": "boolean",
						"description": "Disable the default `{$set: body}` of \"update\" query & update `{body}` directly to the items",
						"default": "false"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"IDeleteQueryParams": {
				"properties": {
					"id": {
						"type": "string",
						"description": "Delete one item by `{ObjectID}`"
					},
					"slug": {
						"type": "string",
						"description": "Delete one item by `{slug}`"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"Cluster": {
				"properties": {
					"_id": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/ObjectID"
							},
							{
								"type": "string"
							}
						]
					},
					"slug": {
						"type": "string",
						"description": "Cluster slug"
					},
					"active": {
						"type": "boolean",
						"description": "Auto-generated by \"name\" column"
					},
					"metadata": {
						"description": "Auto-generated by entity's columns\nEntity's metadata without unicode characters"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"deletedAt": {
						"type": "string",
						"format": "date-time"
					},
					"updatedAt": {
						"type": "string",
						"format": "date-time"
					},
					"name": {
						"type": "string",
						"description": "Cluster name"
					},
					"shortName": {
						"type": "string",
						"description": "Cluster short name (to access via `kubectl context`)"
					},
					"provider": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/ObjectID"
							},
							{
								"$ref": "#/components/schemas/CloudProvider"
							}
						],
						"description": "Cloud provider of this cluster"
					},
					"providerShortName": {
						"type": "string",
						"description": "Short name of the cloud provider"
					},
					"zone": {
						"type": "string",
						"description": "Cloud zone of this cluster"
					},
					"region": {
						"type": "string",
						"description": "Cloud region of this cluster"
					},
					"projectID": {
						"type": "string",
						"description": "[GOOGLE ONLY] Project ID of this cluster"
					},
					"primaryDomain": {
						"type": "string",
						"description": "The PRIMARY domain of this cluster"
					},
					"primaryIP": {
						"type": "string",
						"description": "The PRIMARY IP ADDRESS of this cluster"
					},
					"domains": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"description": "Alternative domains or project's domains of this cluster"
					},
					"kubeConfig": {
						"type": "string",
						"description": "The KUBECONFIG data to access to this cluster"
					},
					"serviceAccount": {
						"type": "string",
						"description": "Content of the Service Account credentials to access this cluster"
					},
					"apiAccessToken": {
						"type": "string",
						"description": "Content of the API ACCESS TOKEN to access this cluster"
					},
					"owner": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/ObjectID"
							},
							{
								"$ref": "#/components/schemas/User"
							},
							{
								"type": "string"
							}
						],
						"description": "User ID of the owner"
					},
					"workspace": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/ObjectID"
							},
							{
								"$ref": "#/components/schemas/Workspace"
							},
							{
								"type": "string"
							}
						],
						"description": "ID of the workspace"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"CloudProvider": {
				"properties": {
					"_id": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/ObjectID"
							},
							{
								"type": "string"
							}
						]
					},
					"slug": {
						"type": "string",
						"description": "Auto-generated by \"name\" column"
					},
					"active": {
						"type": "boolean",
						"description": "Auto-generated by \"name\" column"
					},
					"metadata": {
						"description": "Auto-generated by entity's columns\nEntity's metadata without unicode characters"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"deletedAt": {
						"type": "string",
						"format": "date-time"
					},
					"updatedAt": {
						"type": "string",
						"format": "date-time"
					},
					"name": {
						"type": "string",
						"description": "Cloud provider name"
					},
					"shortName": {
						"type": "string",
						"description": "Cloud provider short name, without spacing & special characters"
					},
					"apiAccessToken": {
						"type": "string",
						"description": "Content of the API access token to use services on this cloud provider\n- Apply for: Digital Ocean"
					},
					"serviceAccount": {
						"type": "string",
						"description": "Content of the Service Account credentials ti access services on this cloud provider\n- Apply for: Google Cloud, AWS,...\n- For example: Kubernetes Clusters, Single Sign-On,..."
					},
					"clusters": {
						"anyOf": [
							{
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							{
								"items": {
									"$ref": "#/components/schemas/Cluster"
								},
								"type": "array"
							}
						],
						"description": "List of available clusters on this provider"
					},
					"owner": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/ObjectID"
							},
							{
								"$ref": "#/components/schemas/User"
							},
							{
								"type": "string"
							}
						],
						"description": "User ID of the owner"
					},
					"workspace": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/ObjectID"
							},
							{
								"$ref": "#/components/schemas/Workspace"
							},
							{
								"type": "string"
							}
						],
						"description": "ID of the workspace"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"Pick_Project.Exclude_keyofProject.keyofHiddenBodyKeys__": {
				"properties": {
					"name": {
						"type": "string"
					},
					"image": {
						"type": "string"
					},
					"slug": {
						"type": "string",
						"description": "Auto-generated by \"name\" column"
					},
					"createdBy": {
						"type": "string"
					},
					"active": {
						"type": "boolean",
						"description": "Auto-generated by \"name\" column"
					},
					"apiKey": {
						"type": "string"
					},
					"clientId": {
						"type": "string"
					},
					"clientSecret": {
						"type": "string"
					},
					"lastUpdatedBy": {
						"type": "string"
					},
					"latestBuild": {
						"type": "string"
					},
					"appSlugs": {
						"type": "string"
					},
					"apps": {
						"anyOf": [
							{
								"items": {
									"$ref": "#/components/schemas/ObjectID"
								},
								"type": "array"
							},
							{
								"items": {
									"$ref": "#/components/schemas/App"
								},
								"type": "array"
							},
							{
								"items": {
									"type": "string"
								},
								"type": "array"
							}
						],
						"description": "List of App IDs"
					}
				},
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"Omit_Project.keyofHiddenBodyKeys_": {
				"$ref": "#/components/schemas/Pick_Project.Exclude_keyofProject.keyofHiddenBodyKeys__",
				"description": "Construct a type with the properties of T except for those in type K."
			},
			"Pick_CloudProvider.Exclude_keyofCloudProvider.keyofHiddenBodyKeys__": {
				"properties": {
					"name": {
						"type": "string",
						"description": "Cloud provider name"
					},
					"slug": {
						"type": "string",
						"description": "Auto-generated by \"name\" column"
					},
					"active": {
						"type": "boolean",
						"description": "Auto-generated by \"name\" column"
					},
					"shortName": {
						"type": "string",
						"description": "Cloud provider short name, without spacing & special characters"
					},
					"apiAccessToken": {
						"type": "string",
						"description": "Content of the API access token to use services on this cloud provider\n- Apply for: Digital Ocean"
					},
					"serviceAccount": {
						"type": "string",
						"description": "Content of the Service Account credentials ti access services on this cloud provider\n- Apply for: Google Cloud, AWS,...\n- For example: Kubernetes Clusters, Single Sign-On,..."
					},
					"clusters": {
						"anyOf": [
							{
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							{
								"items": {
									"$ref": "#/components/schemas/Cluster"
								},
								"type": "array"
							}
						],
						"description": "List of available clusters on this provider"
					}
				},
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"Omit_CloudProvider.keyofHiddenBodyKeys_": {
				"$ref": "#/components/schemas/Pick_CloudProvider.Exclude_keyofCloudProvider.keyofHiddenBodyKeys__",
				"description": "Construct a type with the properties of T except for those in type K."
			},
			"ContainerRegistry": {
				"properties": {
					"_id": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/ObjectID"
							},
							{
								"type": "string"
							}
						]
					},
					"slug": {
						"type": "string",
						"description": "Auto-generated by \"name\" column"
					},
					"active": {
						"type": "boolean",
						"description": "Auto-generated by \"name\" column"
					},
					"metadata": {
						"description": "Auto-generated by entity's columns\nEntity's metadata without unicode characters"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"deletedAt": {
						"type": "string",
						"format": "date-time"
					},
					"updatedAt": {
						"type": "string",
						"format": "date-time"
					},
					"name": {
						"type": "string"
					},
					"host": {
						"type": "string",
						"description": "The host (domain) of your container registry which you are using."
					},
					"imageBaseURL": {
						"type": "string",
						"description": "Base URL of the image, usually is the registry host URI combines with something else.\n- This will be used to combine with your project/app image path."
					},
					"provider": {
						"type": "string",
						"description": "Provider's \"shortName\""
					},
					"serviceAccount": {
						"type": "string",
						"description": "Content of the Service Account credentials ti access services on this cloud provider\n- Apply for: Google Cloud, AWS,...\n- For example: Kubernetes Clusters, Single Sign-On,..."
					},
					"apiAccessToken": {
						"type": "string",
						"description": "Content of the API access token to use services on this cloud provider\n- Apply for: Digital Ocean"
					},
					"imagePullingSecret": {
						"properties": {
							"value": {
								"type": "string"
							},
							"name": {
								"type": "string"
							}
						},
						"type": "object"
					},
					"owner": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/ObjectID"
							},
							{
								"$ref": "#/components/schemas/User"
							},
							{
								"type": "string"
							}
						],
						"description": "User ID of the owner"
					},
					"workspace": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/ObjectID"
							},
							{
								"$ref": "#/components/schemas/Workspace"
							},
							{
								"type": "string"
							}
						],
						"description": "ID of the workspace"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"Release": {
				"properties": {
					"_id": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/ObjectID"
							},
							{
								"type": "string"
							}
						]
					},
					"slug": {
						"type": "string",
						"description": "Auto-generated by \"name\" column"
					},
					"active": {
						"type": "boolean",
						"description": "Auto-generated by \"name\" column"
					},
					"metadata": {
						"description": "Auto-generated by entity's columns\nEntity's metadata without unicode characters"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"deletedAt": {
						"type": "string",
						"format": "date-time"
					},
					"updatedAt": {
						"type": "string",
						"format": "date-time"
					},
					"name": {
						"type": "string"
					},
					"image": {
						"type": "string"
					},
					"env": {
						"type": "string",
						"description": "Targeted environment."
					},
					"envVars": {
						"anyOf": [
							{
								"items": {},
								"type": "array"
							},
							{
								"type": "string"
							}
						],
						"description": "Environment variables"
					},
					"prereleaseEnvironment": {
						"anyOf": [
							{
								"items": {},
								"type": "array"
							},
							{
								"type": "string"
							}
						],
						"description": "ONLY PRE-RELEASE - Environment variables"
					},
					"diginext": {},
					"namespace": {
						"type": "string"
					},
					"prodYaml": {
						"type": "string"
					},
					"preYaml": {
						"type": "string"
					},
					"prereleaseUrl": {
						"type": "string"
					},
					"productionUrl": {
						"type": "string"
					},
					"deploymentYaml": {
						"type": "string",
						"description": "Deployment YAML"
					},
					"endpoint": {
						"type": "string",
						"description": "Release endpoint (development/.../production URL)"
					},
					"createdBy": {
						"type": "string"
					},
					"branch": {
						"type": "string"
					},
					"provider": {
						"type": "string"
					},
					"cluster": {
						"type": "string",
						"description": "Short name of the targeted cluster to deploy to."
					},
					"projectSlug": {
						"type": "string"
					},
					"appSlug": {
						"type": "string"
					},
					"providerProjectId": {
						"type": "string"
					},
					"buildStatus": {
						"type": "string",
						"enum": ["start", "building", "failed", "success"]
					},
					"app": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/ObjectID"
							},
							{
								"$ref": "#/components/schemas/App"
							},
							{
								"type": "string"
							}
						],
						"description": "ID of the app"
					},
					"owner": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/ObjectID"
							},
							{
								"$ref": "#/components/schemas/User"
							},
							{
								"type": "string"
							}
						],
						"description": "User ID of the owner"
					},
					"project": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/ObjectID"
							},
							{
								"$ref": "#/components/schemas/Project"
							},
							{
								"type": "string"
							}
						],
						"description": "ID of the project"
					},
					"workspace": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/ObjectID"
							},
							{
								"$ref": "#/components/schemas/Workspace"
							},
							{
								"type": "string"
							}
						],
						"description": "ID of the workspace"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"Pick_Release.Exclude_keyofRelease.keyofHiddenBodyKeys__": {
				"properties": {
					"app": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/ObjectID"
							},
							{
								"$ref": "#/components/schemas/App"
							},
							{
								"type": "string"
							}
						],
						"description": "ID of the app"
					},
					"name": {
						"type": "string"
					},
					"image": {
						"type": "string"
					},
					"slug": {
						"type": "string",
						"description": "Auto-generated by \"name\" column"
					},
					"env": {
						"type": "string",
						"description": "Targeted environment."
					},
					"branch": {
						"type": "string"
					},
					"createdBy": {
						"type": "string"
					},
					"projectSlug": {
						"type": "string"
					},
					"appSlug": {
						"type": "string"
					},
					"project": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/ObjectID"
							},
							{
								"$ref": "#/components/schemas/Project"
							},
							{
								"type": "string"
							}
						],
						"description": "ID of the project"
					},
					"active": {
						"type": "boolean",
						"description": "Auto-generated by \"name\" column"
					},
					"envVars": {
						"anyOf": [
							{
								"items": {},
								"type": "array"
							},
							{
								"type": "string"
							}
						],
						"description": "Environment variables"
					},
					"prereleaseEnvironment": {
						"anyOf": [
							{
								"items": {},
								"type": "array"
							},
							{
								"type": "string"
							}
						],
						"description": "ONLY PRE-RELEASE - Environment variables"
					},
					"diginext": {},
					"namespace": {
						"type": "string"
					},
					"prodYaml": {
						"type": "string"
					},
					"preYaml": {
						"type": "string"
					},
					"prereleaseUrl": {
						"type": "string"
					},
					"productionUrl": {
						"type": "string"
					},
					"deploymentYaml": {
						"type": "string",
						"description": "Deployment YAML"
					},
					"endpoint": {
						"type": "string",
						"description": "Release endpoint (development/.../production URL)"
					},
					"provider": {
						"type": "string"
					},
					"cluster": {
						"type": "string",
						"description": "Short name of the targeted cluster to deploy to."
					},
					"providerProjectId": {
						"type": "string"
					},
					"buildStatus": {
						"type": "string",
						"enum": ["start", "building", "failed", "success"]
					}
				},
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"Omit_Release.keyofHiddenBodyKeys_": {
				"$ref": "#/components/schemas/Pick_Release.Exclude_keyofRelease.keyofHiddenBodyKeys__",
				"description": "Construct a type with the properties of T except for those in type K."
			},
			"Pick_Role.Exclude_keyofRole.keyofHiddenBodyKeys__": {
				"properties": {
					"name": {
						"type": "string"
					},
					"slug": {
						"type": "string",
						"description": "Auto-generated by \"name\" column"
					},
					"project": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/ObjectID"
							},
							{
								"$ref": "#/components/schemas/Project"
							},
							{
								"type": "string"
							}
						],
						"description": "ID of the project"
					},
					"active": {
						"type": "boolean",
						"description": "Auto-generated by \"name\" column"
					},
					"routes": {
						"items": {
							"$ref": "#/components/schemas/RoleRoute"
						},
						"type": "array"
					}
				},
				"required": ["name", "routes"],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"Omit_Role.keyofHiddenBodyKeys_": {
				"$ref": "#/components/schemas/Pick_Role.Exclude_keyofRole.keyofHiddenBodyKeys__",
				"description": "Construct a type with the properties of T except for those in type K."
			},
			"Pick_Team.Exclude_keyofTeam.keyofHiddenBodyKeys__": {
				"properties": {
					"name": {
						"type": "string"
					},
					"image": {
						"type": "string"
					},
					"slug": {
						"type": "string",
						"description": "Auto-generated by \"name\" column"
					},
					"project": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/ObjectID"
							},
							{
								"$ref": "#/components/schemas/Project"
							},
							{
								"type": "string"
							}
						],
						"description": "ID of the project"
					},
					"active": {
						"type": "boolean",
						"description": "Auto-generated by \"name\" column"
					}
				},
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"Omit_Team.keyofHiddenBodyKeys_": {
				"$ref": "#/components/schemas/Pick_Team.Exclude_keyofTeam.keyofHiddenBodyKeys__",
				"description": "Construct a type with the properties of T except for those in type K."
			},
			"Pick_User.Exclude_keyofUser.keyofHiddenBodyKeys__": {
				"properties": {
					"name": {
						"type": "string",
						"description": "User name"
					},
					"image": {
						"type": "string",
						"description": "User profile picture URL"
					},
					"slug": {
						"type": "string",
						"description": "Auto-generated by \"name\" column"
					},
					"active": {
						"type": "boolean",
						"description": "Auto-generated by \"name\" column"
					},
					"username": {
						"type": "string",
						"description": "Unique username of a user\nThis equavilent with \"slug\""
					},
					"email": {
						"type": "string",
						"description": "User email address"
					},
					"verified": {
						"type": "boolean",
						"description": "Is this user's email or phone verified?"
					},
					"providers": {
						"items": {
							"$ref": "#/components/schemas/ProviderInfo"
						},
						"type": "array",
						"description": "List of Cloud Providers which this user can access to"
					},
					"password": {
						"type": "string",
						"description": "User password (hashed)"
					},
					"token": {
						"description": "User token"
					},
					"roles": {
						"anyOf": [
							{
								"items": {
									"$ref": "#/components/schemas/ObjectID"
								},
								"type": "array"
							},
							{
								"items": {
									"$ref": "#/components/schemas/Role"
								},
								"type": "array"
							},
							{
								"items": {
									"type": "string"
								},
								"type": "array"
							}
						],
						"description": "User's roles\nTODO: Thêm \"workspace\" cho \"roles\" vì mỗi workspace sẽ có roles khác nhau, trong khi mỗi user có thể nằm trong nhiều workspace"
					},
					"teams": {
						"anyOf": [
							{
								"items": {
									"$ref": "#/components/schemas/ObjectID"
								},
								"type": "array"
							},
							{
								"items": {
									"$ref": "#/components/schemas/Team"
								},
								"type": "array"
							},
							{
								"items": {
									"type": "string"
								},
								"type": "array"
							}
						],
						"description": "User's team IDs which this user is a member"
					},
					"workspaces": {
						"anyOf": [
							{
								"items": {
									"$ref": "#/components/schemas/ObjectID"
								},
								"type": "array"
							},
							{
								"items": {
									"$ref": "#/components/schemas/Workspace"
								},
								"type": "array"
							},
							{
								"items": {
									"type": "string"
								},
								"type": "array"
							}
						],
						"description": "List of workspace IDs which this user is a member"
					},
					"activeWorkspace": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/ObjectID"
							},
							{
								"$ref": "#/components/schemas/Workspace"
							},
							{
								"type": "string"
							}
						],
						"description": "Active workspace of a user"
					}
				},
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"Omit_User.keyofHiddenBodyKeys_": {
				"$ref": "#/components/schemas/Pick_User.Exclude_keyofUser.keyofHiddenBodyKeys__",
				"description": "Construct a type with the properties of T except for those in type K."
			},
			"JoinWorkspaceBody": {
				"properties": {
					"userId": {
						"type": "string"
					},
					"workspace": {
						"type": "string"
					}
				},
				"required": ["userId", "workspace"],
				"type": "object",
				"additionalProperties": false
			},
			"Pick_Workspace.Exclude_keyofWorkspace.keyofHiddenBodyKeys__": {
				"properties": {
					"name": {
						"type": "string",
						"description": "Workspace name"
					},
					"image": {
						"type": "string",
						"description": "Workspace profile picture"
					},
					"slug": {
						"type": "string",
						"description": "Workspace slug: auto-generated by \"name\" column"
					},
					"active": {
						"type": "boolean",
						"description": "Auto-generated by \"name\" column"
					},
					"public": {
						"type": "boolean",
						"description": "Is this a `public` workspace that anyone can join, otherwise it's a `private` workspace that needs approval on joining request."
					},
					"domain": {
						"type": "string",
						"description": "Workspace domain name"
					}
				},
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"Omit_Workspace.keyofHiddenBodyKeys_": {
				"$ref": "#/components/schemas/Pick_Workspace.Exclude_keyofWorkspace.keyofHiddenBodyKeys__",
				"description": "Construct a type with the properties of T except for those in type K."
			},
			"AddUserBody": {
				"properties": {
					"userId": {
						"type": "string"
					},
					"workspaceId": {
						"type": "string"
					}
				},
				"required": ["userId", "workspaceId"],
				"type": "object",
				"additionalProperties": false
			},
			"Pick_App.Exclude_keyofApp.keyofHiddenBodyKeys__": {
				"properties": {
					"name": {
						"type": "string"
					},
					"image": {
						"type": "string"
					},
					"slug": {
						"type": "string",
						"description": "Auto-generated by \"name\" column"
					},
					"createdBy": {
						"type": "string"
					},
					"projectSlug": {
						"type": "string"
					},
					"project": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/ObjectID"
							},
							{
								"$ref": "#/components/schemas/Project"
							},
							{
								"type": "string"
							}
						],
						"description": "Project ID of the app"
					},
					"active": {
						"type": "boolean",
						"description": "Auto-generated by \"name\" column"
					},
					"lastUpdatedBy": {
						"type": "string"
					},
					"latestBuild": {
						"type": "string"
					},
					"git": {
						"properties": {
							"repoSSH": {
								"type": "string"
							},
							"repoURL": {
								"type": "string"
							},
							"provider": {
								"type": "string"
							}
						},
						"type": "object"
					},
					"framework": {
						"properties": {
							"repoSSH": {
								"type": "string"
							},
							"repoURL": {
								"type": "string"
							},
							"slug": {
								"type": "string"
							},
							"name": {
								"type": "string"
							}
						},
						"type": "object"
					},
					"environment": {
						"properties": {},
						"additionalProperties": {
							"anyOf": [
								{
									"$ref": "#/components/schemas/DeployEnvironment"
								},
								{
									"type": "string"
								}
							]
						},
						"type": "object"
					}
				},
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"Omit_App.keyofHiddenBodyKeys_": {
				"$ref": "#/components/schemas/Pick_App.Exclude_keyofApp.keyofHiddenBodyKeys__",
				"description": "Construct a type with the properties of T except for those in type K."
			}
		},
		"securitySchemes": {
			"jwt": {
				"type": "http",
				"scheme": "bearer",
				"bearerFormat": "JWT"
			}
		}
	},
	"info": {
		"title": "@topgroup/diginext",
		"version": "1.4.0",
		"description": "A BUILD SERVER & CLI to deploy apps to any Kubernetes clusters.",
		"license": {
			"name": "GPL"
		},
		"contact": {
			"name": "TOP GROUP (a.k.a Digitop)",
			"email": "dev@wearetopgroup.com",
			"url": "https://github.com/mrgoonie"
		}
	},
	"openapi": "3.0.0",
	"paths": {
		"/build": {
			"get": {
				"operationId": "Read",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/ResponseData"
										},
										{
											"properties": {
												"data": {
													"anyOf": [
														{
															"$ref": "#/components/schemas/Build"
														},
														{
															"items": {
																"$ref": "#/components/schemas/Build"
															},
															"type": "array"
														}
													]
												}
											},
											"required": ["data"],
											"type": "object"
										}
									]
								}
							}
						}
					}
				},
				"tags": ["Build"],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "populate",
						"required": false,
						"schema": {
							"type": "string"
						},
						"example": "owner,workspace"
					},
					{
						"in": "query",
						"name": "select",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "order",
						"required": false,
						"schema": {
							"type": "string"
						},
						"example": "-updatedAt,-createdAt"
					},
					{
						"description": "Disable the default `{$set: body}` of \"update\" query & update `{body}` directly to the items",
						"in": "query",
						"name": "raw",
						"required": false,
						"schema": {
							"default": "false",
							"type": "boolean"
						}
					},
					{
						"in": "query",
						"name": "page",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "size",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "limit",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "skip",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"description": "Find one item by `{ObjectID}`",
						"in": "query",
						"name": "id",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "_id",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Mark this request as search (return the similar results based on the filter query params)",
						"in": "query",
						"name": "search",
						"required": false,
						"schema": {
							"default": "true",
							"type": "boolean"
						}
					},
					{
						"description": "If `true`, return the excel binary file to download.",
						"in": "query",
						"name": "download",
						"required": false,
						"schema": {
							"default": "false",
							"type": "boolean"
						}
					}
				]
			},
			"post": {
				"operationId": "Create",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/ResponseData"
										},
										{
											"properties": {
												"data": {
													"anyOf": [
														{
															"allOf": [
																{
																	"$ref": "#/components/schemas/Build"
																},
																{
																	"properties": {
																		"metadata": {},
																		"slug": {
																			"type": "string"
																		}
																	},
																	"type": "object"
																}
															]
														},
														{
															"properties": {
																"error": {}
															},
															"required": ["error"],
															"type": "object"
														}
													]
												}
											},
											"required": ["data"],
											"type": "object"
										}
									]
								}
							}
						}
					}
				},
				"tags": ["Build"],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "populate",
						"required": false,
						"schema": {
							"type": "string"
						},
						"example": "owner,workspace"
					},
					{
						"in": "query",
						"name": "select",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "order",
						"required": false,
						"schema": {
							"type": "string"
						},
						"example": "-updatedAt,-createdAt"
					},
					{
						"description": "Disable the default `{$set: body}` of \"update\" query & update `{body}` directly to the items",
						"in": "query",
						"name": "raw",
						"required": false,
						"schema": {
							"default": "false",
							"type": "boolean"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Omit_Build.keyofHiddenBodyKeys_"
							}
						}
					}
				}
			},
			"patch": {
				"operationId": "Update",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/ResponseData"
										},
										{
											"properties": {
												"data": {
													"items": {
														"$ref": "#/components/schemas/Build"
													},
													"type": "array"
												}
											},
											"required": ["data"],
											"type": "object"
										}
									]
								}
							}
						}
					}
				},
				"tags": ["Build"],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "populate",
						"required": false,
						"schema": {
							"type": "string"
						},
						"example": "owner,workspace"
					},
					{
						"in": "query",
						"name": "select",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "order",
						"required": false,
						"schema": {
							"type": "string"
						},
						"example": "-updatedAt,-createdAt"
					},
					{
						"description": "Disable the default `{$set: body}` of \"update\" query & update `{body}` directly to the items",
						"in": "query",
						"name": "raw",
						"required": false,
						"schema": {
							"default": "false",
							"type": "boolean"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Omit_Build.keyofHiddenBodyKeys_"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "Delete",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/ResponseData"
										},
										{
											"properties": {
												"data": {
													"properties": {
														"n": {
															"type": "number",
															"format": "double"
														},
														"ok": {
															"type": "number",
															"format": "double"
														}
													},
													"type": "object"
												}
											},
											"required": ["data"],
											"type": "object"
										}
									]
								}
							}
						}
					}
				},
				"tags": ["Build"],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"description": "Delete one item by `{ObjectID}`",
						"in": "query",
						"name": "id",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Delete one item by `{slug}`",
						"in": "query",
						"name": "slug",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/build/logs": {
			"get": {
				"operationId": "GetLogs",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/ResponseData"
										},
										{
											"properties": {
												"data": {
													"type": "string"
												}
											},
											"required": ["data"],
											"type": "object"
										}
									]
								}
							}
						}
					}
				},
				"tags": ["Build"],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "slug",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/build/stop": {
			"patch": {
				"operationId": "StopBuild",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/ResponseData"
										},
										{
											"properties": {
												"data": {
													"$ref": "#/components/schemas/Build"
												}
											},
											"required": ["data"],
											"type": "object"
										}
									]
								}
							}
						}
					}
				},
				"tags": ["Build"],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"slug": {
										"type": "string"
									}
								},
								"required": ["slug"],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/cluster": {
			"get": {
				"operationId": "Read",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/ResponseData"
										},
										{
											"properties": {
												"data": {
													"anyOf": [
														{
															"$ref": "#/components/schemas/Cluster"
														},
														{
															"items": {
																"$ref": "#/components/schemas/Cluster"
															},
															"type": "array"
														}
													]
												}
											},
											"required": ["data"],
											"type": "object"
										}
									]
								}
							}
						}
					}
				},
				"tags": ["Cluster"],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "populate",
						"required": false,
						"schema": {
							"type": "string"
						},
						"example": "owner,workspace"
					},
					{
						"in": "query",
						"name": "select",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "order",
						"required": false,
						"schema": {
							"type": "string"
						},
						"example": "-updatedAt,-createdAt"
					},
					{
						"description": "Disable the default `{$set: body}` of \"update\" query & update `{body}` directly to the items",
						"in": "query",
						"name": "raw",
						"required": false,
						"schema": {
							"default": "false",
							"type": "boolean"
						}
					},
					{
						"in": "query",
						"name": "page",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "size",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "limit",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "skip",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"description": "Find one item by `{ObjectID}`",
						"in": "query",
						"name": "id",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "_id",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Mark this request as search (return the similar results based on the filter query params)",
						"in": "query",
						"name": "search",
						"required": false,
						"schema": {
							"default": "true",
							"type": "boolean"
						}
					},
					{
						"description": "If `true`, return the excel binary file to download.",
						"in": "query",
						"name": "download",
						"required": false,
						"schema": {
							"default": "false",
							"type": "boolean"
						}
					}
				]
			},
			"post": {
				"operationId": "Create",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/ResponseData"
										},
										{
											"properties": {
												"data": {
													"anyOf": [
														{
															"allOf": [
																{
																	"$ref": "#/components/schemas/Cluster"
																},
																{
																	"properties": {
																		"metadata": {},
																		"slug": {
																			"type": "string"
																		}
																	},
																	"type": "object"
																}
															]
														},
														{
															"properties": {
																"error": {}
															},
															"required": ["error"],
															"type": "object"
														}
													]
												}
											},
											"required": ["data"],
											"type": "object"
										}
									]
								}
							}
						}
					}
				},
				"tags": ["Cluster"],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "populate",
						"required": false,
						"schema": {
							"type": "string"
						},
						"example": "owner,workspace"
					},
					{
						"in": "query",
						"name": "select",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "order",
						"required": false,
						"schema": {
							"type": "string"
						},
						"example": "-updatedAt,-createdAt"
					},
					{
						"description": "Disable the default `{$set: body}` of \"update\" query & update `{body}` directly to the items",
						"in": "query",
						"name": "raw",
						"required": false,
						"schema": {
							"default": "false",
							"type": "boolean"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Omit_Project.keyofHiddenBodyKeys_"
							}
						}
					}
				}
			},
			"patch": {
				"operationId": "Update",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/ResponseData"
										},
										{
											"properties": {
												"data": {
													"items": {
														"$ref": "#/components/schemas/Cluster"
													},
													"type": "array"
												}
											},
											"required": ["data"],
											"type": "object"
										}
									]
								}
							}
						}
					}
				},
				"tags": ["Cluster"],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "populate",
						"required": false,
						"schema": {
							"type": "string"
						},
						"example": "owner,workspace"
					},
					{
						"in": "query",
						"name": "select",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "order",
						"required": false,
						"schema": {
							"type": "string"
						},
						"example": "-updatedAt,-createdAt"
					},
					{
						"description": "Disable the default `{$set: body}` of \"update\" query & update `{body}` directly to the items",
						"in": "query",
						"name": "raw",
						"required": false,
						"schema": {
							"default": "false",
							"type": "boolean"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Omit_Project.keyofHiddenBodyKeys_"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "Delete",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/ResponseData"
										},
										{
											"properties": {
												"data": {
													"properties": {
														"n": {
															"type": "number",
															"format": "double"
														},
														"ok": {
															"type": "number",
															"format": "double"
														}
													},
													"type": "object"
												}
											},
											"required": ["data"],
											"type": "object"
										}
									]
								}
							}
						}
					}
				},
				"tags": ["Cluster"],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"description": "Delete one item by `{ObjectID}`",
						"in": "query",
						"name": "id",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Delete one item by `{slug}`",
						"in": "query",
						"name": "slug",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/cluster/connect": {
			"get": {
				"operationId": "Connect",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ResponseData"
								}
							}
						}
					}
				},
				"tags": ["Cluster"],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "slug",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/project": {
			"get": {
				"operationId": "Read",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/ResponseData"
										},
										{
											"properties": {
												"data": {
													"anyOf": [
														{
															"$ref": "#/components/schemas/Project"
														},
														{
															"items": {
																"$ref": "#/components/schemas/Project"
															},
															"type": "array"
														}
													]
												}
											},
											"required": ["data"],
											"type": "object"
										}
									]
								}
							}
						}
					}
				},
				"tags": ["Project"],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "populate",
						"required": false,
						"schema": {
							"type": "string"
						},
						"example": "owner,workspace"
					},
					{
						"in": "query",
						"name": "select",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "order",
						"required": false,
						"schema": {
							"type": "string"
						},
						"example": "-updatedAt,-createdAt"
					},
					{
						"description": "Disable the default `{$set: body}` of \"update\" query & update `{body}` directly to the items",
						"in": "query",
						"name": "raw",
						"required": false,
						"schema": {
							"default": "false",
							"type": "boolean"
						}
					},
					{
						"in": "query",
						"name": "page",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "size",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "limit",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "skip",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"description": "Find one item by `{ObjectID}`",
						"in": "query",
						"name": "id",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "_id",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Mark this request as search (return the similar results based on the filter query params)",
						"in": "query",
						"name": "search",
						"required": false,
						"schema": {
							"default": "true",
							"type": "boolean"
						}
					},
					{
						"description": "If `true`, return the excel binary file to download.",
						"in": "query",
						"name": "download",
						"required": false,
						"schema": {
							"default": "false",
							"type": "boolean"
						}
					}
				]
			},
			"post": {
				"operationId": "Create",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/ResponseData"
										},
										{
											"properties": {
												"data": {
													"anyOf": [
														{
															"allOf": [
																{
																	"$ref": "#/components/schemas/Project"
																},
																{
																	"properties": {
																		"metadata": {},
																		"slug": {
																			"type": "string"
																		}
																	},
																	"type": "object"
																}
															]
														},
														{
															"properties": {
																"error": {}
															},
															"required": ["error"],
															"type": "object"
														}
													]
												}
											},
											"required": ["data"],
											"type": "object"
										}
									]
								}
							}
						}
					}
				},
				"tags": ["Project"],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "populate",
						"required": false,
						"schema": {
							"type": "string"
						},
						"example": "owner,workspace"
					},
					{
						"in": "query",
						"name": "select",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "order",
						"required": false,
						"schema": {
							"type": "string"
						},
						"example": "-updatedAt,-createdAt"
					},
					{
						"description": "Disable the default `{$set: body}` of \"update\" query & update `{body}` directly to the items",
						"in": "query",
						"name": "raw",
						"required": false,
						"schema": {
							"default": "false",
							"type": "boolean"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Omit_Project.keyofHiddenBodyKeys_"
							}
						}
					}
				}
			},
			"patch": {
				"operationId": "Update",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/ResponseData"
										},
										{
											"properties": {
												"data": {
													"items": {
														"$ref": "#/components/schemas/Project"
													},
													"type": "array"
												}
											},
											"required": ["data"],
											"type": "object"
										}
									]
								}
							}
						}
					}
				},
				"tags": ["Project"],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "populate",
						"required": false,
						"schema": {
							"type": "string"
						},
						"example": "owner,workspace"
					},
					{
						"in": "query",
						"name": "select",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "order",
						"required": false,
						"schema": {
							"type": "string"
						},
						"example": "-updatedAt,-createdAt"
					},
					{
						"description": "Disable the default `{$set: body}` of \"update\" query & update `{body}` directly to the items",
						"in": "query",
						"name": "raw",
						"required": false,
						"schema": {
							"default": "false",
							"type": "boolean"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Omit_Project.keyofHiddenBodyKeys_"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "Delete",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/ResponseData"
										},
										{
											"properties": {
												"data": {
													"properties": {
														"n": {
															"type": "number",
															"format": "double"
														},
														"ok": {
															"type": "number",
															"format": "double"
														}
													},
													"type": "object"
												}
											},
											"required": ["data"],
											"type": "object"
										}
									]
								}
							}
						}
					}
				},
				"tags": ["Project"],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"description": "Delete one item by `{ObjectID}`",
						"in": "query",
						"name": "id",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Delete one item by `{slug}`",
						"in": "query",
						"name": "slug",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/project/with-apps": {
			"get": {
				"operationId": "GetProjectsAndApps",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/ResponseData"
										},
										{
											"properties": {
												"data": {
													"items": {
														"$ref": "#/components/schemas/Project"
													},
													"type": "array"
												}
											},
											"required": ["data"],
											"type": "object"
										}
									]
								}
							}
						}
					}
				},
				"tags": ["Project"],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "populate",
						"required": false,
						"schema": {
							"type": "string"
						},
						"example": "owner,workspace"
					},
					{
						"in": "query",
						"name": "select",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "order",
						"required": false,
						"schema": {
							"type": "string"
						},
						"example": "-updatedAt,-createdAt"
					},
					{
						"description": "Disable the default `{$set: body}` of \"update\" query & update `{body}` directly to the items",
						"in": "query",
						"name": "raw",
						"required": false,
						"schema": {
							"default": "false",
							"type": "boolean"
						}
					},
					{
						"in": "query",
						"name": "page",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "size",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "limit",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "skip",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"description": "Find one item by `{ObjectID}`",
						"in": "query",
						"name": "id",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "_id",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Mark this request as search (return the similar results based on the filter query params)",
						"in": "query",
						"name": "search",
						"required": false,
						"schema": {
							"default": "true",
							"type": "boolean"
						}
					},
					{
						"description": "If `true`, return the excel binary file to download.",
						"in": "query",
						"name": "download",
						"required": false,
						"schema": {
							"default": "false",
							"type": "boolean"
						}
					}
				]
			}
		},
		"/provider": {
			"get": {
				"operationId": "Read",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/ResponseData"
										},
										{
											"properties": {
												"data": {
													"anyOf": [
														{
															"$ref": "#/components/schemas/CloudProvider"
														},
														{
															"items": {
																"$ref": "#/components/schemas/CloudProvider"
															},
															"type": "array"
														}
													]
												}
											},
											"required": ["data"],
											"type": "object"
										}
									]
								}
							}
						}
					}
				},
				"tags": ["Cloud Provider"],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "populate",
						"required": false,
						"schema": {
							"type": "string"
						},
						"example": "owner,workspace"
					},
					{
						"in": "query",
						"name": "select",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "order",
						"required": false,
						"schema": {
							"type": "string"
						},
						"example": "-updatedAt,-createdAt"
					},
					{
						"description": "Disable the default `{$set: body}` of \"update\" query & update `{body}` directly to the items",
						"in": "query",
						"name": "raw",
						"required": false,
						"schema": {
							"default": "false",
							"type": "boolean"
						}
					},
					{
						"in": "query",
						"name": "page",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "size",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "limit",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "skip",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"description": "Find one item by `{ObjectID}`",
						"in": "query",
						"name": "id",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "_id",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Mark this request as search (return the similar results based on the filter query params)",
						"in": "query",
						"name": "search",
						"required": false,
						"schema": {
							"default": "true",
							"type": "boolean"
						}
					},
					{
						"description": "If `true`, return the excel binary file to download.",
						"in": "query",
						"name": "download",
						"required": false,
						"schema": {
							"default": "false",
							"type": "boolean"
						}
					}
				]
			},
			"post": {
				"operationId": "Create",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/ResponseData"
										},
										{
											"properties": {
												"data": {
													"anyOf": [
														{
															"allOf": [
																{
																	"$ref": "#/components/schemas/CloudProvider"
																},
																{
																	"properties": {
																		"metadata": {},
																		"slug": {
																			"type": "string"
																		}
																	},
																	"type": "object"
																}
															]
														},
														{
															"properties": {
																"error": {}
															},
															"required": ["error"],
															"type": "object"
														}
													]
												}
											},
											"required": ["data"],
											"type": "object"
										}
									]
								}
							}
						}
					}
				},
				"tags": ["Cloud Provider"],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "populate",
						"required": false,
						"schema": {
							"type": "string"
						},
						"example": "owner,workspace"
					},
					{
						"in": "query",
						"name": "select",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "order",
						"required": false,
						"schema": {
							"type": "string"
						},
						"example": "-updatedAt,-createdAt"
					},
					{
						"description": "Disable the default `{$set: body}` of \"update\" query & update `{body}` directly to the items",
						"in": "query",
						"name": "raw",
						"required": false,
						"schema": {
							"default": "false",
							"type": "boolean"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Omit_CloudProvider.keyofHiddenBodyKeys_"
							}
						}
					}
				}
			},
			"patch": {
				"operationId": "Update",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/ResponseData"
										},
										{
											"properties": {
												"data": {
													"items": {
														"$ref": "#/components/schemas/CloudProvider"
													},
													"type": "array"
												}
											},
											"required": ["data"],
											"type": "object"
										}
									]
								}
							}
						}
					}
				},
				"tags": ["Cloud Provider"],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "populate",
						"required": false,
						"schema": {
							"type": "string"
						},
						"example": "owner,workspace"
					},
					{
						"in": "query",
						"name": "select",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "order",
						"required": false,
						"schema": {
							"type": "string"
						},
						"example": "-updatedAt,-createdAt"
					},
					{
						"description": "Disable the default `{$set: body}` of \"update\" query & update `{body}` directly to the items",
						"in": "query",
						"name": "raw",
						"required": false,
						"schema": {
							"default": "false",
							"type": "boolean"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Omit_CloudProvider.keyofHiddenBodyKeys_"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "Delete",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/ResponseData"
										},
										{
											"properties": {
												"data": {
													"properties": {
														"n": {
															"type": "number",
															"format": "double"
														},
														"ok": {
															"type": "number",
															"format": "double"
														}
													},
													"type": "object"
												}
											},
											"required": ["data"],
											"type": "object"
										}
									]
								}
							}
						}
					}
				},
				"tags": ["Cloud Provider"],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"description": "Delete one item by `{ObjectID}`",
						"in": "query",
						"name": "id",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Delete one item by `{slug}`",
						"in": "query",
						"name": "slug",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/registry": {
			"get": {
				"operationId": "Read",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/ResponseData"
										},
										{
											"properties": {
												"data": {
													"anyOf": [
														{
															"$ref": "#/components/schemas/ContainerRegistry"
														},
														{
															"items": {
																"$ref": "#/components/schemas/ContainerRegistry"
															},
															"type": "array"
														}
													]
												}
											},
											"required": ["data"],
											"type": "object"
										}
									]
								}
							}
						}
					}
				},
				"tags": ["Container Registry"],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "populate",
						"required": false,
						"schema": {
							"type": "string"
						},
						"example": "owner,workspace"
					},
					{
						"in": "query",
						"name": "select",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "order",
						"required": false,
						"schema": {
							"type": "string"
						},
						"example": "-updatedAt,-createdAt"
					},
					{
						"description": "Disable the default `{$set: body}` of \"update\" query & update `{body}` directly to the items",
						"in": "query",
						"name": "raw",
						"required": false,
						"schema": {
							"default": "false",
							"type": "boolean"
						}
					},
					{
						"in": "query",
						"name": "page",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "size",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "limit",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "skip",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"description": "Find one item by `{ObjectID}`",
						"in": "query",
						"name": "id",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "_id",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Mark this request as search (return the similar results based on the filter query params)",
						"in": "query",
						"name": "search",
						"required": false,
						"schema": {
							"default": "true",
							"type": "boolean"
						}
					},
					{
						"description": "If `true`, return the excel binary file to download.",
						"in": "query",
						"name": "download",
						"required": false,
						"schema": {
							"default": "false",
							"type": "boolean"
						}
					}
				]
			},
			"post": {
				"operationId": "Create",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/ResponseData"
										},
										{
											"properties": {
												"data": {
													"anyOf": [
														{
															"allOf": [
																{
																	"$ref": "#/components/schemas/ContainerRegistry"
																},
																{
																	"properties": {
																		"metadata": {},
																		"slug": {
																			"type": "string"
																		}
																	},
																	"type": "object"
																}
															]
														},
														{
															"properties": {
																"error": {}
															},
															"required": ["error"],
															"type": "object"
														}
													]
												}
											},
											"required": ["data"],
											"type": "object"
										}
									]
								}
							}
						}
					}
				},
				"tags": ["Container Registry"],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "populate",
						"required": false,
						"schema": {
							"type": "string"
						},
						"example": "owner,workspace"
					},
					{
						"in": "query",
						"name": "select",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "order",
						"required": false,
						"schema": {
							"type": "string"
						},
						"example": "-updatedAt,-createdAt"
					},
					{
						"description": "Disable the default `{$set: body}` of \"update\" query & update `{body}` directly to the items",
						"in": "query",
						"name": "raw",
						"required": false,
						"schema": {
							"default": "false",
							"type": "boolean"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Omit_Project.keyofHiddenBodyKeys_"
							}
						}
					}
				}
			},
			"patch": {
				"operationId": "Update",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/ResponseData"
										},
										{
											"properties": {
												"data": {
													"items": {
														"$ref": "#/components/schemas/ContainerRegistry"
													},
													"type": "array"
												}
											},
											"required": ["data"],
											"type": "object"
										}
									]
								}
							}
						}
					}
				},
				"tags": ["Container Registry"],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "populate",
						"required": false,
						"schema": {
							"type": "string"
						},
						"example": "owner,workspace"
					},
					{
						"in": "query",
						"name": "select",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "order",
						"required": false,
						"schema": {
							"type": "string"
						},
						"example": "-updatedAt,-createdAt"
					},
					{
						"description": "Disable the default `{$set: body}` of \"update\" query & update `{body}` directly to the items",
						"in": "query",
						"name": "raw",
						"required": false,
						"schema": {
							"default": "false",
							"type": "boolean"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Omit_Project.keyofHiddenBodyKeys_"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "Delete",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/ResponseData"
										},
										{
											"properties": {
												"data": {
													"properties": {
														"n": {
															"type": "number",
															"format": "double"
														},
														"ok": {
															"type": "number",
															"format": "double"
														}
													},
													"type": "object"
												}
											},
											"required": ["data"],
											"type": "object"
										}
									]
								}
							}
						}
					}
				},
				"tags": ["Container Registry"],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"description": "Delete one item by `{ObjectID}`",
						"in": "query",
						"name": "id",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Delete one item by `{slug}`",
						"in": "query",
						"name": "slug",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/registry/connect": {
			"get": {
				"operationId": "Connect",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"data": {},
										"messages": {
											"items": {
												"type": "string"
											},
											"type": "array"
										},
										"status": {
											"type": "number",
											"format": "double"
										}
									},
									"required": ["data", "messages", "status"],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": ["Container Registry"],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "slug",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/release": {
			"get": {
				"operationId": "Read",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/ResponseData"
										},
										{
											"properties": {
												"data": {
													"anyOf": [
														{
															"$ref": "#/components/schemas/Release"
														},
														{
															"items": {
																"$ref": "#/components/schemas/Release"
															},
															"type": "array"
														}
													]
												}
											},
											"required": ["data"],
											"type": "object"
										}
									]
								}
							}
						}
					}
				},
				"tags": ["Release"],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "populate",
						"required": false,
						"schema": {
							"type": "string"
						},
						"example": "owner,workspace"
					},
					{
						"in": "query",
						"name": "select",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "order",
						"required": false,
						"schema": {
							"type": "string"
						},
						"example": "-updatedAt,-createdAt"
					},
					{
						"description": "Disable the default `{$set: body}` of \"update\" query & update `{body}` directly to the items",
						"in": "query",
						"name": "raw",
						"required": false,
						"schema": {
							"default": "false",
							"type": "boolean"
						}
					},
					{
						"in": "query",
						"name": "page",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "size",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "limit",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "skip",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"description": "Find one item by `{ObjectID}`",
						"in": "query",
						"name": "id",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "_id",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Mark this request as search (return the similar results based on the filter query params)",
						"in": "query",
						"name": "search",
						"required": false,
						"schema": {
							"default": "true",
							"type": "boolean"
						}
					},
					{
						"description": "If `true`, return the excel binary file to download.",
						"in": "query",
						"name": "download",
						"required": false,
						"schema": {
							"default": "false",
							"type": "boolean"
						}
					}
				]
			},
			"post": {
				"operationId": "Create",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/ResponseData"
										},
										{
											"properties": {
												"data": {
													"anyOf": [
														{
															"allOf": [
																{
																	"$ref": "#/components/schemas/Release"
																},
																{
																	"properties": {
																		"metadata": {},
																		"slug": {
																			"type": "string"
																		}
																	},
																	"type": "object"
																}
															]
														},
														{
															"properties": {
																"error": {}
															},
															"required": ["error"],
															"type": "object"
														}
													]
												}
											},
											"required": ["data"],
											"type": "object"
										}
									]
								}
							}
						}
					}
				},
				"tags": ["Release"],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "populate",
						"required": false,
						"schema": {
							"type": "string"
						},
						"example": "owner,workspace"
					},
					{
						"in": "query",
						"name": "select",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "order",
						"required": false,
						"schema": {
							"type": "string"
						},
						"example": "-updatedAt,-createdAt"
					},
					{
						"description": "Disable the default `{$set: body}` of \"update\" query & update `{body}` directly to the items",
						"in": "query",
						"name": "raw",
						"required": false,
						"schema": {
							"default": "false",
							"type": "boolean"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Omit_Release.keyofHiddenBodyKeys_"
							}
						}
					}
				}
			},
			"patch": {
				"operationId": "Update",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/ResponseData"
										},
										{
											"properties": {
												"data": {
													"items": {
														"$ref": "#/components/schemas/Release"
													},
													"type": "array"
												}
											},
											"required": ["data"],
											"type": "object"
										}
									]
								}
							}
						}
					}
				},
				"tags": ["Release"],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "populate",
						"required": false,
						"schema": {
							"type": "string"
						},
						"example": "owner,workspace"
					},
					{
						"in": "query",
						"name": "select",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "order",
						"required": false,
						"schema": {
							"type": "string"
						},
						"example": "-updatedAt,-createdAt"
					},
					{
						"description": "Disable the default `{$set: body}` of \"update\" query & update `{body}` directly to the items",
						"in": "query",
						"name": "raw",
						"required": false,
						"schema": {
							"default": "false",
							"type": "boolean"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Omit_Release.keyofHiddenBodyKeys_"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "Delete",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/ResponseData"
										},
										{
											"properties": {
												"data": {
													"properties": {
														"n": {
															"type": "number",
															"format": "double"
														},
														"ok": {
															"type": "number",
															"format": "double"
														}
													},
													"type": "object"
												}
											},
											"required": ["data"],
											"type": "object"
										}
									]
								}
							}
						}
					}
				},
				"tags": ["Release"],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"description": "Delete one item by `{ObjectID}`",
						"in": "query",
						"name": "id",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Delete one item by `{slug}`",
						"in": "query",
						"name": "slug",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/release/from-build": {
			"post": {
				"operationId": "CreateFromBuild",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/ResponseData"
										},
										{
											"properties": {
												"data": {
													"$ref": "#/components/schemas/Release"
												}
											},
											"required": ["data"],
											"type": "object"
										}
									]
								}
							}
						}
					}
				},
				"tags": ["Release"],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"build": {
										"type": "string"
									}
								},
								"required": ["build"],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/release/rollout": {
			"patch": {
				"operationId": "Rollout",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/ResponseData"
										},
										{
											"properties": {
												"data": {
													"$ref": "#/components/schemas/Release"
												}
											},
											"required": ["data"],
											"type": "object"
										}
									]
								}
							}
						}
					}
				},
				"tags": ["Release"],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"id": {
										"type": "string"
									}
								},
								"required": ["id"],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/release/preview": {
			"patch": {
				"operationId": "PreviewPrerelease",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/ResponseData"
										},
										{
											"properties": {
												"data": {
													"$ref": "#/components/schemas/Release"
												}
											},
											"required": ["data"],
											"type": "object"
										}
									]
								}
							}
						}
					}
				},
				"tags": ["Release"],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"id": {
										"type": "string"
									}
								},
								"required": ["id"],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/role": {
			"get": {
				"operationId": "Read",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/ResponseData"
										},
										{
											"properties": {
												"data": {
													"anyOf": [
														{
															"$ref": "#/components/schemas/Role"
														},
														{
															"items": {
																"$ref": "#/components/schemas/Role"
															},
															"type": "array"
														}
													]
												}
											},
											"required": ["data"],
											"type": "object"
										}
									]
								}
							}
						}
					}
				},
				"tags": ["Role"],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "populate",
						"required": false,
						"schema": {
							"type": "string"
						},
						"example": "owner,workspace"
					},
					{
						"in": "query",
						"name": "select",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "order",
						"required": false,
						"schema": {
							"type": "string"
						},
						"example": "-updatedAt,-createdAt"
					},
					{
						"description": "Disable the default `{$set: body}` of \"update\" query & update `{body}` directly to the items",
						"in": "query",
						"name": "raw",
						"required": false,
						"schema": {
							"default": "false",
							"type": "boolean"
						}
					},
					{
						"in": "query",
						"name": "page",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "size",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "limit",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "skip",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"description": "Find one item by `{ObjectID}`",
						"in": "query",
						"name": "id",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "_id",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Mark this request as search (return the similar results based on the filter query params)",
						"in": "query",
						"name": "search",
						"required": false,
						"schema": {
							"default": "true",
							"type": "boolean"
						}
					},
					{
						"description": "If `true`, return the excel binary file to download.",
						"in": "query",
						"name": "download",
						"required": false,
						"schema": {
							"default": "false",
							"type": "boolean"
						}
					}
				]
			},
			"post": {
				"operationId": "Create",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/ResponseData"
										},
										{
											"properties": {
												"data": {
													"anyOf": [
														{
															"allOf": [
																{
																	"$ref": "#/components/schemas/Role"
																},
																{
																	"properties": {
																		"metadata": {},
																		"slug": {
																			"type": "string"
																		}
																	},
																	"type": "object"
																}
															]
														},
														{
															"properties": {
																"error": {}
															},
															"required": ["error"],
															"type": "object"
														}
													]
												}
											},
											"required": ["data"],
											"type": "object"
										}
									]
								}
							}
						}
					}
				},
				"tags": ["Role"],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "populate",
						"required": false,
						"schema": {
							"type": "string"
						},
						"example": "owner,workspace"
					},
					{
						"in": "query",
						"name": "select",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "order",
						"required": false,
						"schema": {
							"type": "string"
						},
						"example": "-updatedAt,-createdAt"
					},
					{
						"description": "Disable the default `{$set: body}` of \"update\" query & update `{body}` directly to the items",
						"in": "query",
						"name": "raw",
						"required": false,
						"schema": {
							"default": "false",
							"type": "boolean"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Omit_Role.keyofHiddenBodyKeys_"
							}
						}
					}
				}
			},
			"patch": {
				"operationId": "Update",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/ResponseData"
										},
										{
											"properties": {
												"data": {
													"items": {
														"$ref": "#/components/schemas/Role"
													},
													"type": "array"
												}
											},
											"required": ["data"],
											"type": "object"
										}
									]
								}
							}
						}
					}
				},
				"tags": ["Role"],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "populate",
						"required": false,
						"schema": {
							"type": "string"
						},
						"example": "owner,workspace"
					},
					{
						"in": "query",
						"name": "select",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "order",
						"required": false,
						"schema": {
							"type": "string"
						},
						"example": "-updatedAt,-createdAt"
					},
					{
						"description": "Disable the default `{$set: body}` of \"update\" query & update `{body}` directly to the items",
						"in": "query",
						"name": "raw",
						"required": false,
						"schema": {
							"default": "false",
							"type": "boolean"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Omit_Role.keyofHiddenBodyKeys_"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "Delete",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/ResponseData"
										},
										{
											"properties": {
												"data": {
													"properties": {
														"n": {
															"type": "number",
															"format": "double"
														},
														"ok": {
															"type": "number",
															"format": "double"
														}
													},
													"type": "object"
												}
											},
											"required": ["data"],
											"type": "object"
										}
									]
								}
							}
						}
					}
				},
				"tags": ["Role"],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"description": "Delete one item by `{ObjectID}`",
						"in": "query",
						"name": "id",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Delete one item by `{slug}`",
						"in": "query",
						"name": "slug",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/team": {
			"get": {
				"operationId": "Read",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/ResponseData"
										},
										{
											"properties": {
												"data": {
													"anyOf": [
														{
															"$ref": "#/components/schemas/Team"
														},
														{
															"items": {
																"$ref": "#/components/schemas/Team"
															},
															"type": "array"
														}
													]
												}
											},
											"required": ["data"],
											"type": "object"
										}
									]
								}
							}
						}
					}
				},
				"tags": ["Team"],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "populate",
						"required": false,
						"schema": {
							"type": "string"
						},
						"example": "owner,workspace"
					},
					{
						"in": "query",
						"name": "select",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "order",
						"required": false,
						"schema": {
							"type": "string"
						},
						"example": "-updatedAt,-createdAt"
					},
					{
						"description": "Disable the default `{$set: body}` of \"update\" query & update `{body}` directly to the items",
						"in": "query",
						"name": "raw",
						"required": false,
						"schema": {
							"default": "false",
							"type": "boolean"
						}
					},
					{
						"in": "query",
						"name": "page",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "size",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "limit",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "skip",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"description": "Find one item by `{ObjectID}`",
						"in": "query",
						"name": "id",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "_id",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Mark this request as search (return the similar results based on the filter query params)",
						"in": "query",
						"name": "search",
						"required": false,
						"schema": {
							"default": "true",
							"type": "boolean"
						}
					},
					{
						"description": "If `true`, return the excel binary file to download.",
						"in": "query",
						"name": "download",
						"required": false,
						"schema": {
							"default": "false",
							"type": "boolean"
						}
					}
				]
			},
			"post": {
				"operationId": "Create",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/ResponseData"
										},
										{
											"properties": {
												"data": {
													"anyOf": [
														{
															"allOf": [
																{
																	"$ref": "#/components/schemas/Team"
																},
																{
																	"properties": {
																		"metadata": {},
																		"slug": {
																			"type": "string"
																		}
																	},
																	"type": "object"
																}
															]
														},
														{
															"properties": {
																"error": {}
															},
															"required": ["error"],
															"type": "object"
														}
													]
												}
											},
											"required": ["data"],
											"type": "object"
										}
									]
								}
							}
						}
					}
				},
				"tags": ["Team"],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "populate",
						"required": false,
						"schema": {
							"type": "string"
						},
						"example": "owner,workspace"
					},
					{
						"in": "query",
						"name": "select",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "order",
						"required": false,
						"schema": {
							"type": "string"
						},
						"example": "-updatedAt,-createdAt"
					},
					{
						"description": "Disable the default `{$set: body}` of \"update\" query & update `{body}` directly to the items",
						"in": "query",
						"name": "raw",
						"required": false,
						"schema": {
							"default": "false",
							"type": "boolean"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Omit_Team.keyofHiddenBodyKeys_"
							}
						}
					}
				}
			},
			"patch": {
				"operationId": "Update",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/ResponseData"
										},
										{
											"properties": {
												"data": {
													"items": {
														"$ref": "#/components/schemas/Team"
													},
													"type": "array"
												}
											},
											"required": ["data"],
											"type": "object"
										}
									]
								}
							}
						}
					}
				},
				"tags": ["Team"],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "populate",
						"required": false,
						"schema": {
							"type": "string"
						},
						"example": "owner,workspace"
					},
					{
						"in": "query",
						"name": "select",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "order",
						"required": false,
						"schema": {
							"type": "string"
						},
						"example": "-updatedAt,-createdAt"
					},
					{
						"description": "Disable the default `{$set: body}` of \"update\" query & update `{body}` directly to the items",
						"in": "query",
						"name": "raw",
						"required": false,
						"schema": {
							"default": "false",
							"type": "boolean"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Omit_Team.keyofHiddenBodyKeys_"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "Delete",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/ResponseData"
										},
										{
											"properties": {
												"data": {
													"properties": {
														"n": {
															"type": "number",
															"format": "double"
														},
														"ok": {
															"type": "number",
															"format": "double"
														}
													},
													"type": "object"
												}
											},
											"required": ["data"],
											"type": "object"
										}
									]
								}
							}
						}
					}
				},
				"tags": ["Team"],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"description": "Delete one item by `{ObjectID}`",
						"in": "query",
						"name": "id",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Delete one item by `{slug}`",
						"in": "query",
						"name": "slug",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/user": {
			"get": {
				"operationId": "Read",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/ResponseData"
										},
										{
											"properties": {
												"data": {
													"anyOf": [
														{
															"$ref": "#/components/schemas/User"
														},
														{
															"items": {
																"$ref": "#/components/schemas/User"
															},
															"type": "array"
														}
													]
												}
											},
											"required": ["data"],
											"type": "object"
										}
									]
								}
							}
						}
					}
				},
				"tags": ["User"],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "populate",
						"required": false,
						"schema": {
							"type": "string"
						},
						"example": "owner,workspace"
					},
					{
						"in": "query",
						"name": "select",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "order",
						"required": false,
						"schema": {
							"type": "string"
						},
						"example": "-updatedAt,-createdAt"
					},
					{
						"description": "Disable the default `{$set: body}` of \"update\" query & update `{body}` directly to the items",
						"in": "query",
						"name": "raw",
						"required": false,
						"schema": {
							"default": "false",
							"type": "boolean"
						}
					},
					{
						"in": "query",
						"name": "page",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "size",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "limit",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "skip",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"description": "Find one item by `{ObjectID}`",
						"in": "query",
						"name": "id",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "_id",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Mark this request as search (return the similar results based on the filter query params)",
						"in": "query",
						"name": "search",
						"required": false,
						"schema": {
							"default": "true",
							"type": "boolean"
						}
					},
					{
						"description": "If `true`, return the excel binary file to download.",
						"in": "query",
						"name": "download",
						"required": false,
						"schema": {
							"default": "false",
							"type": "boolean"
						}
					}
				]
			},
			"post": {
				"operationId": "Create",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/ResponseData"
										},
										{
											"properties": {
												"data": {
													"anyOf": [
														{
															"allOf": [
																{
																	"$ref": "#/components/schemas/User"
																},
																{
																	"properties": {
																		"metadata": {},
																		"slug": {
																			"type": "string"
																		}
																	},
																	"type": "object"
																}
															]
														},
														{
															"properties": {
																"error": {}
															},
															"required": ["error"],
															"type": "object"
														}
													]
												}
											},
											"required": ["data"],
											"type": "object"
										}
									]
								}
							}
						}
					}
				},
				"tags": ["User"],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "populate",
						"required": false,
						"schema": {
							"type": "string"
						},
						"example": "owner,workspace"
					},
					{
						"in": "query",
						"name": "select",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "order",
						"required": false,
						"schema": {
							"type": "string"
						},
						"example": "-updatedAt,-createdAt"
					},
					{
						"description": "Disable the default `{$set: body}` of \"update\" query & update `{body}` directly to the items",
						"in": "query",
						"name": "raw",
						"required": false,
						"schema": {
							"default": "false",
							"type": "boolean"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Omit_User.keyofHiddenBodyKeys_"
							}
						}
					}
				}
			},
			"patch": {
				"operationId": "Update",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/ResponseData"
										},
										{
											"properties": {
												"data": {
													"items": {
														"$ref": "#/components/schemas/User"
													},
													"type": "array"
												}
											},
											"required": ["data"],
											"type": "object"
										}
									]
								}
							}
						}
					}
				},
				"tags": ["User"],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "populate",
						"required": false,
						"schema": {
							"type": "string"
						},
						"example": "owner,workspace"
					},
					{
						"in": "query",
						"name": "select",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "order",
						"required": false,
						"schema": {
							"type": "string"
						},
						"example": "-updatedAt,-createdAt"
					},
					{
						"description": "Disable the default `{$set: body}` of \"update\" query & update `{body}` directly to the items",
						"in": "query",
						"name": "raw",
						"required": false,
						"schema": {
							"default": "false",
							"type": "boolean"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Omit_User.keyofHiddenBodyKeys_"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "Delete",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/ResponseData"
										},
										{
											"properties": {
												"data": {
													"properties": {
														"n": {
															"type": "number",
															"format": "double"
														},
														"ok": {
															"type": "number",
															"format": "double"
														}
													},
													"type": "object"
												}
											},
											"required": ["data"],
											"type": "object"
										}
									]
								}
							}
						}
					}
				},
				"tags": ["User"],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"description": "Delete one item by `{ObjectID}`",
						"in": "query",
						"name": "id",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Delete one item by `{slug}`",
						"in": "query",
						"name": "slug",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/user/join-workspace": {
			"patch": {
				"operationId": "JoinWorkspace",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/ResponseData"
										},
										{
											"properties": {
												"data": {
													"$ref": "#/components/schemas/User"
												}
											},
											"required": ["data"],
											"type": "object"
										}
									]
								}
							}
						}
					}
				},
				"tags": ["User"],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/JoinWorkspaceBody"
							}
						}
					}
				}
			}
		},
		"/workspace": {
			"get": {
				"operationId": "Read",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/ResponseData"
										},
										{
											"properties": {
												"data": {
													"anyOf": [
														{
															"$ref": "#/components/schemas/Workspace"
														},
														{
															"items": {
																"$ref": "#/components/schemas/Workspace"
															},
															"type": "array"
														}
													]
												}
											},
											"required": ["data"],
											"type": "object"
										}
									]
								}
							}
						}
					}
				},
				"tags": ["Workspace"],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "populate",
						"required": false,
						"schema": {
							"type": "string"
						},
						"example": "owner,workspace"
					},
					{
						"in": "query",
						"name": "select",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "order",
						"required": false,
						"schema": {
							"type": "string"
						},
						"example": "-updatedAt,-createdAt"
					},
					{
						"description": "Disable the default `{$set: body}` of \"update\" query & update `{body}` directly to the items",
						"in": "query",
						"name": "raw",
						"required": false,
						"schema": {
							"default": "false",
							"type": "boolean"
						}
					},
					{
						"in": "query",
						"name": "page",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "size",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "limit",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "skip",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"description": "Find one item by `{ObjectID}`",
						"in": "query",
						"name": "id",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "_id",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Mark this request as search (return the similar results based on the filter query params)",
						"in": "query",
						"name": "search",
						"required": false,
						"schema": {
							"default": "true",
							"type": "boolean"
						}
					},
					{
						"description": "If `true`, return the excel binary file to download.",
						"in": "query",
						"name": "download",
						"required": false,
						"schema": {
							"default": "false",
							"type": "boolean"
						}
					}
				]
			},
			"post": {
				"operationId": "Create",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/ResponseData"
										},
										{
											"properties": {
												"data": {
													"anyOf": [
														{
															"allOf": [
																{
																	"$ref": "#/components/schemas/Workspace"
																},
																{
																	"properties": {
																		"metadata": {},
																		"slug": {
																			"type": "string"
																		}
																	},
																	"type": "object"
																}
															]
														},
														{
															"properties": {
																"error": {}
															},
															"required": ["error"],
															"type": "object"
														}
													]
												}
											},
											"required": ["data"],
											"type": "object"
										}
									]
								}
							}
						}
					}
				},
				"tags": ["Workspace"],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "populate",
						"required": false,
						"schema": {
							"type": "string"
						},
						"example": "owner,workspace"
					},
					{
						"in": "query",
						"name": "select",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "order",
						"required": false,
						"schema": {
							"type": "string"
						},
						"example": "-updatedAt,-createdAt"
					},
					{
						"description": "Disable the default `{$set: body}` of \"update\" query & update `{body}` directly to the items",
						"in": "query",
						"name": "raw",
						"required": false,
						"schema": {
							"default": "false",
							"type": "boolean"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Omit_Workspace.keyofHiddenBodyKeys_"
							}
						}
					}
				}
			},
			"patch": {
				"operationId": "Update",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/ResponseData"
										},
										{
											"properties": {
												"data": {
													"items": {
														"$ref": "#/components/schemas/Workspace"
													},
													"type": "array"
												}
											},
											"required": ["data"],
											"type": "object"
										}
									]
								}
							}
						}
					}
				},
				"tags": ["Workspace"],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "populate",
						"required": false,
						"schema": {
							"type": "string"
						},
						"example": "owner,workspace"
					},
					{
						"in": "query",
						"name": "select",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "order",
						"required": false,
						"schema": {
							"type": "string"
						},
						"example": "-updatedAt,-createdAt"
					},
					{
						"description": "Disable the default `{$set: body}` of \"update\" query & update `{body}` directly to the items",
						"in": "query",
						"name": "raw",
						"required": false,
						"schema": {
							"default": "false",
							"type": "boolean"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Omit_Workspace.keyofHiddenBodyKeys_"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "Delete",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/ResponseData"
										},
										{
											"properties": {
												"data": {
													"properties": {
														"n": {
															"type": "number",
															"format": "double"
														},
														"ok": {
															"type": "number",
															"format": "double"
														}
													},
													"type": "object"
												}
											},
											"required": ["data"],
											"type": "object"
										}
									]
								}
							}
						}
					}
				},
				"tags": ["Workspace"],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"description": "Delete one item by `{ObjectID}`",
						"in": "query",
						"name": "id",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Delete one item by `{slug}`",
						"in": "query",
						"name": "slug",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/workspace/add-user": {
			"patch": {
				"operationId": "AddUser",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/ResponseData"
										},
										{
											"properties": {
												"data": {
													"items": {
														"$ref": "#/components/schemas/User"
													},
													"type": "array"
												}
											},
											"required": ["data"],
											"type": "object"
										}
									]
								}
							}
						}
					}
				},
				"tags": ["Workspace"],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AddUserBody"
							}
						}
					}
				}
			}
		},
		"/app": {
			"get": {
				"operationId": "Read",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/ResponseData"
										},
										{
											"properties": {
												"data": {
													"anyOf": [
														{
															"$ref": "#/components/schemas/App"
														},
														{
															"items": {
																"$ref": "#/components/schemas/App"
															},
															"type": "array"
														}
													]
												}
											},
											"required": ["data"],
											"type": "object"
										}
									]
								}
							}
						}
					}
				},
				"tags": ["App"],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "populate",
						"required": false,
						"schema": {
							"type": "string"
						},
						"example": "owner,workspace"
					},
					{
						"in": "query",
						"name": "select",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "order",
						"required": false,
						"schema": {
							"type": "string"
						},
						"example": "-updatedAt,-createdAt"
					},
					{
						"description": "Disable the default `{$set: body}` of \"update\" query & update `{body}` directly to the items",
						"in": "query",
						"name": "raw",
						"required": false,
						"schema": {
							"default": "false",
							"type": "boolean"
						}
					},
					{
						"in": "query",
						"name": "page",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "size",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "limit",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "skip",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"description": "Find one item by `{ObjectID}`",
						"in": "query",
						"name": "id",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "_id",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Mark this request as search (return the similar results based on the filter query params)",
						"in": "query",
						"name": "search",
						"required": false,
						"schema": {
							"default": "true",
							"type": "boolean"
						}
					},
					{
						"description": "If `true`, return the excel binary file to download.",
						"in": "query",
						"name": "download",
						"required": false,
						"schema": {
							"default": "false",
							"type": "boolean"
						}
					}
				]
			},
			"post": {
				"operationId": "Create",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/ResponseData"
										},
										{
											"properties": {
												"data": {
													"anyOf": [
														{
															"allOf": [
																{
																	"$ref": "#/components/schemas/App"
																},
																{
																	"properties": {
																		"metadata": {},
																		"slug": {
																			"type": "string"
																		}
																	},
																	"type": "object"
																}
															]
														},
														{
															"properties": {
																"error": {}
															},
															"required": ["error"],
															"type": "object"
														}
													]
												}
											},
											"required": ["data"],
											"type": "object"
										}
									]
								}
							}
						}
					}
				},
				"tags": ["App"],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "populate",
						"required": false,
						"schema": {
							"type": "string"
						},
						"example": "owner,workspace"
					},
					{
						"in": "query",
						"name": "select",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "order",
						"required": false,
						"schema": {
							"type": "string"
						},
						"example": "-updatedAt,-createdAt"
					},
					{
						"description": "Disable the default `{$set: body}` of \"update\" query & update `{body}` directly to the items",
						"in": "query",
						"name": "raw",
						"required": false,
						"schema": {
							"default": "false",
							"type": "boolean"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Omit_App.keyofHiddenBodyKeys_"
							}
						}
					}
				}
			},
			"patch": {
				"operationId": "Update",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/ResponseData"
										},
										{
											"properties": {
												"data": {
													"items": {
														"$ref": "#/components/schemas/App"
													},
													"type": "array"
												}
											},
											"required": ["data"],
											"type": "object"
										}
									]
								}
							}
						}
					}
				},
				"tags": ["App"],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "populate",
						"required": false,
						"schema": {
							"type": "string"
						},
						"example": "owner,workspace"
					},
					{
						"in": "query",
						"name": "select",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "order",
						"required": false,
						"schema": {
							"type": "string"
						},
						"example": "-updatedAt,-createdAt"
					},
					{
						"description": "Disable the default `{$set: body}` of \"update\" query & update `{body}` directly to the items",
						"in": "query",
						"name": "raw",
						"required": false,
						"schema": {
							"default": "false",
							"type": "boolean"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Omit_App.keyofHiddenBodyKeys_"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "Delete",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/ResponseData"
										},
										{
											"properties": {
												"data": {
													"properties": {
														"n": {
															"type": "number",
															"format": "double"
														},
														"ok": {
															"type": "number",
															"format": "double"
														}
													},
													"type": "object"
												}
											},
											"required": ["data"],
											"type": "object"
										}
									]
								}
							}
						}
					}
				},
				"tags": ["App"],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"description": "Delete one item by `{ObjectID}`",
						"in": "query",
						"name": "id",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Delete one item by `{slug}`",
						"in": "query",
						"name": "slug",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/app/environment": {
			"delete": {
				"operationId": "DeleteEnvironment",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/ResponseData"
										},
										{
											"properties": {
												"data": {
													"$ref": "#/components/schemas/App"
												}
											},
											"required": ["data"],
											"type": "object"
										}
									]
								}
							}
						}
					}
				},
				"tags": ["App"],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "env",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "slug",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "_id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		}
	},
	"servers": [
		{
			"url": "/api/v1"
		}
	]
}
