{"version":3,"sources":["../browser/src/logger/DebugLogger.ts"],"names":[],"mappings":"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","file":"DebugLogger.js","sourcesContent":["import debug from \"debug\"\nimport { Logger } from \"./Logger\"\nimport { QueryRunner } from \"../query-runner/QueryRunner\"\nimport { PlatformTools } from \"../platform/PlatformTools\"\n\n/**\n * Performs logging of the events in TypeORM via debug library.\n */\nexport class DebugLogger implements Logger {\n    private debugQueryLog = debug(\"typeorm:query:log\")\n    private debugQueryError = debug(\"typeorm:query:error\")\n    private debugQuerySlow = debug(\"typeorm:query:slow\")\n    private debugSchemaBuild = debug(\"typeorm:schema\")\n    private debugMigration = debug(\"typeorm:migration\")\n\n    private debugLog = debug(\"typeorm:log\")\n    private debugInfo = debug(\"typeorm:info\")\n    private debugWarn = debug(\"typeorm:warn\")\n\n    /**\n     * Logs query and parameters used in it.\n     */\n    logQuery(query: string, parameters?: any[], queryRunner?: QueryRunner) {\n        if (this.debugQueryLog.enabled) {\n            this.debugQueryLog(PlatformTools.highlightSql(query) + \";\")\n            if (parameters && parameters.length) {\n                this.debugQueryLog(\"parameters:\", parameters)\n            }\n        }\n    }\n\n    /**\n     * Logs query that failed.\n     */\n    logQueryError(\n        error: string,\n        query: string,\n        parameters?: any[],\n        queryRunner?: QueryRunner,\n    ) {\n        if (this.debugQueryError.enabled) {\n            this.debugQueryError(PlatformTools.highlightSql(query) + \";\")\n            if (parameters && parameters.length) {\n                this.debugQueryError(\"parameters:\", parameters)\n            }\n            this.debugQueryError(\"error: \", error)\n        }\n    }\n\n    /**\n     * Logs query that is slow.\n     */\n    logQuerySlow(\n        time: number,\n        query: string,\n        parameters?: any[],\n        queryRunner?: QueryRunner,\n    ) {\n        if (this.debugQuerySlow.enabled) {\n            this.debugQuerySlow(PlatformTools.highlightSql(query) + \";\")\n            if (parameters && parameters.length) {\n                this.debugQuerySlow(\"parameters:\", parameters)\n            }\n            this.debugQuerySlow(\"execution time:\", time)\n        }\n    }\n\n    /**\n     * Logs events from the schema build process.\n     */\n    logSchemaBuild(message: string, queryRunner?: QueryRunner) {\n        if (this.debugSchemaBuild.enabled) {\n            this.debugSchemaBuild(message)\n        }\n    }\n\n    /**\n     * Logs events from the migration run process.\n     */\n    logMigration(message: string, queryRunner?: QueryRunner) {\n        if (this.debugMigration.enabled) {\n            this.debugMigration(message)\n        }\n    }\n\n    /**\n     * Perform logging using given logger.\n     * Log has its own level and message.\n     */\n    log(\n        level: \"log\" | \"info\" | \"warn\",\n        message: any,\n        queryRunner?: QueryRunner,\n    ) {\n        switch (level) {\n            case \"log\":\n                if (this.debugLog.enabled) {\n                    this.debugLog(message)\n                }\n                break\n            case \"info\":\n                if (this.debugInfo.enabled) {\n                    this.debugInfo(message)\n                }\n                break\n            case \"warn\":\n                if (this.debugWarn.enabled) {\n                    this.debugWarn(message)\n                }\n                break\n        }\n    }\n}\n"],"sourceRoot":".."}