{"version":3,"sources":["../../src/connection/options-reader/ConnectionOptionsYmlReader.ts"],"names":[],"mappings":";;;;AAAA,8DAA+B;AAC/B,gEAA4D;AAG5D;;;;GAIG;AACH,MAAa,0BAA0B;IACnC,4EAA4E;IAC5E,iBAAiB;IACjB,4EAA4E;IAE5E;;OAEG;IACH,KAAK,CAAC,IAAI,CAAC,IAAY;QACnB,MAAM,cAAc,GAAG,6BAAa,CAAC,YAAY,CAAC,IAAI,CAAC,CAAA;QACvD,MAAM,QAAQ,GAAG,cAAc,CAAC,QAAQ,EAAE,CAAA;QAE1C,MAAM,MAAM,GAAG,iBAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;QAEvC,IAAI,CAAC,MAAM,IAAI,OAAO,MAAM,KAAK,QAAQ,IAAI,MAAM,KAAK,IAAI,EAAE;YAC1D,OAAO,EAAE,CAAA;SACZ;QAED,OAAO,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,cAAc,EAAE,EAAE;YAC9C,OAAO,MAAM,CAAC,MAAM,CAChB,EAAE,IAAI,EAAE,cAAc,EAAE,EACvB,MAAc,CAAC,cAAc,CAAC,CAClC,CAAA;QACL,CAAC,CAAC,CAAA;IACN,CAAC;CACJ;AAzBD,gEAyBC","file":"ConnectionOptionsYmlReader.js","sourcesContent":["import ymlParser from \"js-yaml\"\nimport { PlatformTools } from \"../../platform/PlatformTools\"\nimport { DataSourceOptions } from \"../../data-source/DataSourceOptions\"\n\n/**\n * Reads connection options defined in the yml file.\n *\n * @deprecated\n */\nexport class ConnectionOptionsYmlReader {\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n\n    /**\n     * Reads connection options from given yml file.\n     */\n    async read(path: string): Promise<DataSourceOptions[]> {\n        const contentsBuffer = PlatformTools.readFileSync(path)\n        const contents = contentsBuffer.toString()\n\n        const config = ymlParser.load(contents)\n\n        if (!config || typeof config !== \"object\" || config === null) {\n            return []\n        }\n\n        return Object.keys(config).map((connectionName) => {\n            return Object.assign(\n                { name: connectionName },\n                (config as any)[connectionName],\n            )\n        })\n    }\n}\n"],"sourceRoot":"../.."}