import { Schema } from "mongoose";

import type { HiddenBodyKeys } from "@/interfaces";

import type { IBase } from "./Base";
import { baseSchemaOptions } from "./Base";

export interface IWorkspace extends IBase {
	/**
	 * Workspace name
	 */
	name?: string;
	/**
	 * Workspace slug: auto-generated by "name" column
	 * @readonly
	 */
	slug?: string;
	/**
	 * Is this a `public` workspace that anyone can join, otherwise it's a `private` workspace that needs approval on joining request.
	 */
	public?: boolean;
	/**
	 * Workspace profile picture
	 */
	image?: string;
	/**
	 * Workspace domain name
	 */
	domain?: string;
}

export type WorkspaceDto = Omit<IWorkspace, keyof HiddenBodyKeys>;

export const workspaceSchema = new Schema({
	...baseSchemaOptions,
	name: { type: String },
	slug: { type: String },
	public: { type: Boolean },
	image: { type: String },
	domain: { type: String },
	owner: { type: Schema.Types.ObjectId, ref: "users" },
});
