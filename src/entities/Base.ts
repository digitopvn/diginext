import type { ObjectId } from "mongodb";

import type { ObjectID } from "@/libs/typeorm";
import { Column, CreateDateColumn, DeleteDateColumn, ObjectIdColumn, UpdateDateColumn } from "@/libs/typeorm";

export interface IBase {
	_id: string;
	createdAt?: Date;
	deletedAt?: Date;
	updatedAt?: Date;
}

// export interface SchemaMetadata<T extends Base> {}

export default abstract class Base {
	@ObjectIdColumn({ name: "_id" })
	_id?: ObjectID | ObjectId | string;

	/**
	 * Auto-generated by "name" column
	 */
	@Column()
	slug?: string;

	/**
	 * Auto-generated by "name" column
	 */
	@Column({ default: true })
	active?: boolean;

	/**
	 * Auto-generated by entity's columns
	 * Entity's metadata without unicode characters
	 */
	@Column()
	metadata?: any;

	// Metadata
	// metadata?: SchemaMetadata;

	// Date & time

	@CreateDateColumn()
	createdAt?: Date;

	@DeleteDateColumn()
	deletedAt?: Date;

	@UpdateDateColumn()
	updatedAt?: Date;
}
